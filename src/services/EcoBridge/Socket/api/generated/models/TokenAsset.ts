/* tslint:disable */
/* eslint-disable */
/**
 * Movr Aggregator API
 * The Movr Aggregator API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface TokenAsset
 */
export interface TokenAsset {
  /**
   * Name of token.
   * @type {string}
   * @memberof TokenAsset
   */
  name?: string
  /**
   * Address of token.
   * @type {string}
   * @memberof TokenAsset
   */
  address: string
  /**
   * URL for icon of token.
   * @type {string}
   * @memberof TokenAsset
   */
  icon?: string
  /**
   * Decimal used for token.
   * @type {number}
   * @memberof TokenAsset
   */
  decimals?: number
  /**
   * Symbol of token.
   * @type {string}
   * @memberof TokenAsset
   */
  symbol: string
  /**
   * Chain id of the token
   * @type {string}
   * @memberof TokenAsset
   */
  chainId: TokenAssetChainIdEnum
}

/**
 * @export
 * @enum {string}
 */
export enum TokenAssetChainIdEnum {
  Ethereum = 'ETHEREUM',
  Optimism = 'OPTIMISM',
  Bsc = 'BSC',
  Xdai = 'XDAI',
  Polygon = 'POLYGON',
  Fantom = 'FANTOM',
  Arbitrum = 'ARBITRUM',
  Avalanche = 'AVALANCHE',
}

export function TokenAssetFromJSON(json: any): TokenAsset {
  return TokenAssetFromJSONTyped(json, false)
}

export function TokenAssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenAsset {
  if (json === undefined || json === null) {
    return json
  }
  return {
    name: !exists(json, 'name') ? undefined : json['name'],
    address: json['address'],
    icon: !exists(json, 'icon') ? undefined : json['icon'],
    decimals: !exists(json, 'decimals') ? undefined : json['decimals'],
    symbol: json['symbol'],
    chainId: json['chainId'],
  }
}

export function TokenAssetToJSON(value?: TokenAsset | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    name: value.name,
    address: value.address,
    icon: value.icon,
    decimals: value.decimals,
    symbol: value.symbol,
    chainId: value.chainId,
  }
}
