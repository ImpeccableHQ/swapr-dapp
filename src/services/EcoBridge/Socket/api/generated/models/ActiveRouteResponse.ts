/* tslint:disable */
/* eslint-disable */
/**
 * Movr Aggregator API
 * The Movr Aggregator API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import { TokenAsset, TokenAssetFromJSON, TokenAssetFromJSONTyped, TokenAssetToJSON } from './TokenAsset'

/**
 *
 * @export
 * @interface ActiveRouteResponse
 */
export interface ActiveRouteResponse {
  /**
   * Id of the Active Route.
   * @type {number}
   * @memberof ActiveRouteResponse
   */
  activeRouteId: number
  /**
   * Address of user doing the Active Route.
   * @type {string}
   * @memberof ActiveRouteResponse
   */
  userAddress: string
  /**
   * Total number of txs required in Active Route.
   * @type {number}
   * @memberof ActiveRouteResponse
   */
  totalUserTx: number
  /**
   * Array of user txs.
   * @type {Array<object>}
   * @memberof ActiveRouteResponse
   */
  userTxs: Array<object>
  /**
   * Id of source chain.
   * @type {number}
   * @memberof ActiveRouteResponse
   */
  fromChainId: number
  /**
   * Id of destination chain.
   * @type {number}
   * @memberof ActiveRouteResponse
   */
  toChainId: number
  /**
   * Address of token on source chain.
   * @type {string}
   * @memberof ActiveRouteResponse
   */
  fromAssetAddress: string
  /**
   * Address of token on destination chain.
   * @type {string}
   * @memberof ActiveRouteResponse
   */
  toAssetAddress: string
  /**
   * Amount of sending tokens.
   * @type {string}
   * @memberof ActiveRouteResponse
   */
  fromAmount: string
  /**
   * Approximate amount of receiving tokens.
   * @type {string}
   * @memberof ActiveRouteResponse
   */
  toAmount: string
  /**
   * Status of the Active Route.
   * @type {string}
   * @memberof ActiveRouteResponse
   */
  routeStatus: string
  /**
   * Timestamp of Route start.
   * @type {Date}
   * @memberof ActiveRouteResponse
   */
  createdAt: Date
  /**
   * Timestamp of last route update.
   * @type {Date}
   * @memberof ActiveRouteResponse
   */
  updatedAt: Date
  /**
   * Index of current tx in userTxs array.
   * @type {number}
   * @memberof ActiveRouteResponse
   */
  currentUserTxIndex: number
  /**
   *
   * @type {TokenAsset}
   * @memberof ActiveRouteResponse
   */
  fromAsset: TokenAsset
  /**
   *
   * @type {TokenAsset}
   * @memberof ActiveRouteResponse
   */
  toAsset: TokenAsset
}

export function ActiveRouteResponseFromJSON(json: any): ActiveRouteResponse {
  return ActiveRouteResponseFromJSONTyped(json, false)
}

export function ActiveRouteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActiveRouteResponse {
  if (json === undefined || json === null) {
    return json
  }
  return {
    activeRouteId: json['activeRouteId'],
    userAddress: json['userAddress'],
    totalUserTx: json['totalUserTx'],
    userTxs: json['userTxs'],
    fromChainId: json['fromChainId'],
    toChainId: json['toChainId'],
    fromAssetAddress: json['fromAssetAddress'],
    toAssetAddress: json['toAssetAddress'],
    fromAmount: json['fromAmount'],
    toAmount: json['toAmount'],
    routeStatus: json['routeStatus'],
    createdAt: new Date(json['createdAt']),
    updatedAt: new Date(json['updatedAt']),
    currentUserTxIndex: json['currentUserTxIndex'],
    fromAsset: TokenAssetFromJSON(json['fromAsset']),
    toAsset: TokenAssetFromJSON(json['toAsset']),
  }
}

export function ActiveRouteResponseToJSON(value?: ActiveRouteResponse | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    activeRouteId: value.activeRouteId,
    userAddress: value.userAddress,
    totalUserTx: value.totalUserTx,
    userTxs: value.userTxs,
    fromChainId: value.fromChainId,
    toChainId: value.toChainId,
    fromAssetAddress: value.fromAssetAddress,
    toAssetAddress: value.toAssetAddress,
    fromAmount: value.fromAmount,
    toAmount: value.toAmount,
    routeStatus: value.routeStatus,
    createdAt: value.createdAt.toISOString(),
    updatedAt: value.updatedAt.toISOString(),
    currentUserTxIndex: value.currentUserTxIndex,
    fromAsset: TokenAssetToJSON(value.fromAsset),
    toAsset: TokenAssetToJSON(value.toAsset),
  }
}
