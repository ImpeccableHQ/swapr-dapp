/* tslint:disable */
/* eslint-disable */
/**
 * Movr Aggregator API
 * The Movr Aggregator API description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface BridgeStatusResponse
 */
export interface BridgeStatusResponse {
  /**
   * Source Transaction.
   * @type {string}
   * @memberof BridgeStatusResponse
   */
  sourceTx: string
  /**
   * Status of source transaction while bridging.
   * @type {string}
   * @memberof BridgeStatusResponse
   */
  sourceTxStatus: BridgeStatusResponseSourceTxStatusEnum
  /**
   * Destination Transaction hash.
   * @type {string}
   * @memberof BridgeStatusResponse
   */
  destinationTransactionHash: string
  /**
   * Status of destination transaction while bridging.
   * @type {string}
   * @memberof BridgeStatusResponse
   */
  destinationTxStatus: BridgeStatusResponseDestinationTxStatusEnum
  /**
   * Source Chain Id
   * @type {number}
   * @memberof BridgeStatusResponse
   */
  fromChainId: number
  /**
   * Destination Chain Id.
   * @type {number}
   * @memberof BridgeStatusResponse
   */
  toChainId: number
}

/**
 * @export
 * @enum {string}
 */
export enum BridgeStatusResponseSourceTxStatusEnum {
  Pending = 'PENDING',
  Completed = 'COMPLETED',
}
/**
 * @export
 * @enum {string}
 */
export enum BridgeStatusResponseDestinationTxStatusEnum {
  Pending = 'PENDING',
  Completed = 'COMPLETED',
}

export function BridgeStatusResponseFromJSON(json: any): BridgeStatusResponse {
  return BridgeStatusResponseFromJSONTyped(json, false)
}

export function BridgeStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BridgeStatusResponse {
  if (json === undefined || json === null) {
    return json
  }
  return {
    sourceTx: json['sourceTx'],
    sourceTxStatus: json['sourceTxStatus'],
    destinationTransactionHash: json['destinationTransactionHash'],
    destinationTxStatus: json['destinationTxStatus'],
    fromChainId: json['fromChainId'],
    toChainId: json['toChainId'],
  }
}

export function BridgeStatusResponseToJSON(value?: BridgeStatusResponse | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    sourceTx: value.sourceTx,
    sourceTxStatus: value.sourceTxStatus,
    destinationTransactionHash: value.destinationTransactionHash,
    destinationTxStatus: value.destinationTxStatus,
    fromChainId: value.fromChainId,
    toChainId: value.toChainId,
  }
}
